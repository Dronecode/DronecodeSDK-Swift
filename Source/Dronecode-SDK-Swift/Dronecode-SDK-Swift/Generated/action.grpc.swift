//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: action/action.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol DronecodeSdk_Rpc_Action_ActionServiceArmCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceArmCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_ArmRequest, DronecodeSdk_Rpc_Action_ArmResponse>, DronecodeSdk_Rpc_Action_ActionServiceArmCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/Arm" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceDisarmCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceDisarmCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_DisarmRequest, DronecodeSdk_Rpc_Action_DisarmResponse>, DronecodeSdk_Rpc_Action_ActionServiceDisarmCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/Disarm" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTakeoffCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTakeoffCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_TakeoffRequest, DronecodeSdk_Rpc_Action_TakeoffResponse>, DronecodeSdk_Rpc_Action_ActionServiceTakeoffCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/Takeoff" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceLandCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceLandCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_LandRequest, DronecodeSdk_Rpc_Action_LandResponse>, DronecodeSdk_Rpc_Action_ActionServiceLandCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/Land" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceKillCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceKillCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_KillRequest, DronecodeSdk_Rpc_Action_KillResponse>, DronecodeSdk_Rpc_Action_ActionServiceKillCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/Kill" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, DronecodeSdk_Rpc_Action_ReturnToLaunchResponse>, DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/ReturnToLaunch" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse>, DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/TransitionToFixedWing" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse>, DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/TransitionToMulticopter" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse>, DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/GetTakeoffAltitude" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse>, DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/SetTakeoffAltitude" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse>, DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/GetMaximumSpeed" }
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCall: ClientCallUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCallBase: ClientCallUnaryBase<DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse>, DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCall {
  override class var method: String { return "/dronecode_sdk.rpc.action.ActionService/SetMaximumSpeed" }
}


/// Instantiate DronecodeSdk_Rpc_Action_ActionServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol DronecodeSdk_Rpc_Action_ActionServiceService: ServiceClient {
  /// Synchronous. Unary.
  func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest) throws -> DronecodeSdk_Rpc_Action_ArmResponse
  /// Asynchronous. Unary.
  func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ArmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceArmCall

  /// Synchronous. Unary.
  func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest) throws -> DronecodeSdk_Rpc_Action_DisarmResponse
  /// Asynchronous. Unary.
  func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_DisarmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceDisarmCall

  /// Synchronous. Unary.
  func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest) throws -> DronecodeSdk_Rpc_Action_TakeoffResponse
  /// Asynchronous. Unary.
  func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TakeoffResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTakeoffCall

  /// Synchronous. Unary.
  func land(_ request: DronecodeSdk_Rpc_Action_LandRequest) throws -> DronecodeSdk_Rpc_Action_LandResponse
  /// Asynchronous. Unary.
  func land(_ request: DronecodeSdk_Rpc_Action_LandRequest, completion: @escaping (DronecodeSdk_Rpc_Action_LandResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceLandCall

  /// Synchronous. Unary.
  func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest) throws -> DronecodeSdk_Rpc_Action_KillResponse
  /// Asynchronous. Unary.
  func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest, completion: @escaping (DronecodeSdk_Rpc_Action_KillResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceKillCall

  /// Synchronous. Unary.
  func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest) throws -> DronecodeSdk_Rpc_Action_ReturnToLaunchResponse
  /// Asynchronous. Unary.
  func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ReturnToLaunchResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCall

  /// Synchronous. Unary.
  func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse
  /// Asynchronous. Unary.
  func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCall

  /// Synchronous. Unary.
  func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse
  /// Asynchronous. Unary.
  func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCall

  /// Synchronous. Unary.
  func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse
  /// Asynchronous. Unary.
  func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCall

  /// Synchronous. Unary.
  func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse
  /// Asynchronous. Unary.
  func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCall

  /// Synchronous. Unary.
  func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse
  /// Asynchronous. Unary.
  func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCall

  /// Synchronous. Unary.
  func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse
  /// Asynchronous. Unary.
  func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCall

}

internal final class DronecodeSdk_Rpc_Action_ActionServiceServiceClient: ServiceClientBase, DronecodeSdk_Rpc_Action_ActionServiceService {
  /// Synchronous. Unary.
  internal func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest) throws -> DronecodeSdk_Rpc_Action_ArmResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceArmCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ArmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceArmCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceArmCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest) throws -> DronecodeSdk_Rpc_Action_DisarmResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceDisarmCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_DisarmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceDisarmCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceDisarmCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest) throws -> DronecodeSdk_Rpc_Action_TakeoffResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceTakeoffCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TakeoffResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTakeoffCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceTakeoffCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func land(_ request: DronecodeSdk_Rpc_Action_LandRequest) throws -> DronecodeSdk_Rpc_Action_LandResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceLandCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func land(_ request: DronecodeSdk_Rpc_Action_LandRequest, completion: @escaping (DronecodeSdk_Rpc_Action_LandResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceLandCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceLandCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest) throws -> DronecodeSdk_Rpc_Action_KillResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceKillCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest, completion: @escaping (DronecodeSdk_Rpc_Action_KillResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceKillCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceKillCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest) throws -> DronecodeSdk_Rpc_Action_ReturnToLaunchResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ReturnToLaunchResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse {
    return try DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCall {
    return try DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

class DronecodeSdk_Rpc_Action_ActionServiceServiceTestStub: ServiceClientTestStubBase, DronecodeSdk_Rpc_Action_ActionServiceService {
  var armRequests: [DronecodeSdk_Rpc_Action_ArmRequest] = []
  var armResponses: [DronecodeSdk_Rpc_Action_ArmResponse] = []
  func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest) throws -> DronecodeSdk_Rpc_Action_ArmResponse {
    armRequests.append(request)
    defer { armResponses.removeFirst() }
    return armResponses.first!
  }
  func arm(_ request: DronecodeSdk_Rpc_Action_ArmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ArmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceArmCall {
    fatalError("not implemented")
  }

  var disarmRequests: [DronecodeSdk_Rpc_Action_DisarmRequest] = []
  var disarmResponses: [DronecodeSdk_Rpc_Action_DisarmResponse] = []
  func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest) throws -> DronecodeSdk_Rpc_Action_DisarmResponse {
    disarmRequests.append(request)
    defer { disarmResponses.removeFirst() }
    return disarmResponses.first!
  }
  func disarm(_ request: DronecodeSdk_Rpc_Action_DisarmRequest, completion: @escaping (DronecodeSdk_Rpc_Action_DisarmResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceDisarmCall {
    fatalError("not implemented")
  }

  var takeoffRequests: [DronecodeSdk_Rpc_Action_TakeoffRequest] = []
  var takeoffResponses: [DronecodeSdk_Rpc_Action_TakeoffResponse] = []
  func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest) throws -> DronecodeSdk_Rpc_Action_TakeoffResponse {
    takeoffRequests.append(request)
    defer { takeoffResponses.removeFirst() }
    return takeoffResponses.first!
  }
  func takeoff(_ request: DronecodeSdk_Rpc_Action_TakeoffRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TakeoffResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTakeoffCall {
    fatalError("not implemented")
  }

  var landRequests: [DronecodeSdk_Rpc_Action_LandRequest] = []
  var landResponses: [DronecodeSdk_Rpc_Action_LandResponse] = []
  func land(_ request: DronecodeSdk_Rpc_Action_LandRequest) throws -> DronecodeSdk_Rpc_Action_LandResponse {
    landRequests.append(request)
    defer { landResponses.removeFirst() }
    return landResponses.first!
  }
  func land(_ request: DronecodeSdk_Rpc_Action_LandRequest, completion: @escaping (DronecodeSdk_Rpc_Action_LandResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceLandCall {
    fatalError("not implemented")
  }

  var killRequests: [DronecodeSdk_Rpc_Action_KillRequest] = []
  var killResponses: [DronecodeSdk_Rpc_Action_KillResponse] = []
  func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest) throws -> DronecodeSdk_Rpc_Action_KillResponse {
    killRequests.append(request)
    defer { killResponses.removeFirst() }
    return killResponses.first!
  }
  func kill(_ request: DronecodeSdk_Rpc_Action_KillRequest, completion: @escaping (DronecodeSdk_Rpc_Action_KillResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceKillCall {
    fatalError("not implemented")
  }

  var returnToLaunchRequests: [DronecodeSdk_Rpc_Action_ReturnToLaunchRequest] = []
  var returnToLaunchResponses: [DronecodeSdk_Rpc_Action_ReturnToLaunchResponse] = []
  func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest) throws -> DronecodeSdk_Rpc_Action_ReturnToLaunchResponse {
    returnToLaunchRequests.append(request)
    defer { returnToLaunchResponses.removeFirst() }
    return returnToLaunchResponses.first!
  }
  func returnToLaunch(_ request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, completion: @escaping (DronecodeSdk_Rpc_Action_ReturnToLaunchResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchCall {
    fatalError("not implemented")
  }

  var transitionToFixedWingRequests: [DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest] = []
  var transitionToFixedWingResponses: [DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse] = []
  func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse {
    transitionToFixedWingRequests.append(request)
    defer { transitionToFixedWingResponses.removeFirst() }
    return transitionToFixedWingResponses.first!
  }
  func transitionToFixedWing(_ request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingCall {
    fatalError("not implemented")
  }

  var transitionToMulticopterRequests: [DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest] = []
  var transitionToMulticopterResponses: [DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse] = []
  func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest) throws -> DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse {
    transitionToMulticopterRequests.append(request)
    defer { transitionToMulticopterResponses.removeFirst() }
    return transitionToMulticopterResponses.first!
  }
  func transitionToMulticopter(_ request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, completion: @escaping (DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterCall {
    fatalError("not implemented")
  }

  var getTakeoffAltitudeRequests: [DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest] = []
  var getTakeoffAltitudeResponses: [DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse] = []
  func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse {
    getTakeoffAltitudeRequests.append(request)
    defer { getTakeoffAltitudeResponses.removeFirst() }
    return getTakeoffAltitudeResponses.first!
  }
  func getTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeCall {
    fatalError("not implemented")
  }

  var setTakeoffAltitudeRequests: [DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest] = []
  var setTakeoffAltitudeResponses: [DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse] = []
  func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest) throws -> DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse {
    setTakeoffAltitudeRequests.append(request)
    defer { setTakeoffAltitudeResponses.removeFirst() }
    return setTakeoffAltitudeResponses.first!
  }
  func setTakeoffAltitude(_ request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeCall {
    fatalError("not implemented")
  }

  var getMaximumSpeedRequests: [DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest] = []
  var getMaximumSpeedResponses: [DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse] = []
  func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse {
    getMaximumSpeedRequests.append(request)
    defer { getMaximumSpeedResponses.removeFirst() }
    return getMaximumSpeedResponses.first!
  }
  func getMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedCall {
    fatalError("not implemented")
  }

  var setMaximumSpeedRequests: [DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest] = []
  var setMaximumSpeedResponses: [DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse] = []
  func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest) throws -> DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse {
    setMaximumSpeedRequests.append(request)
    defer { setMaximumSpeedResponses.removeFirst() }
    return setMaximumSpeedResponses.first!
  }
  func setMaximumSpeed(_ request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, completion: @escaping (DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse?, CallResult) -> Void) throws -> DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedCall {
    fatalError("not implemented")
  }

}

/// To build a server, implement a class that conforms to this protocol.
internal protocol DronecodeSdk_Rpc_Action_ActionServiceProvider {
  func arm(request: DronecodeSdk_Rpc_Action_ArmRequest, session: DronecodeSdk_Rpc_Action_ActionServiceArmSession) throws -> DronecodeSdk_Rpc_Action_ArmResponse
  func disarm(request: DronecodeSdk_Rpc_Action_DisarmRequest, session: DronecodeSdk_Rpc_Action_ActionServiceDisarmSession) throws -> DronecodeSdk_Rpc_Action_DisarmResponse
  func takeoff(request: DronecodeSdk_Rpc_Action_TakeoffRequest, session: DronecodeSdk_Rpc_Action_ActionServiceTakeoffSession) throws -> DronecodeSdk_Rpc_Action_TakeoffResponse
  func land(request: DronecodeSdk_Rpc_Action_LandRequest, session: DronecodeSdk_Rpc_Action_ActionServiceLandSession) throws -> DronecodeSdk_Rpc_Action_LandResponse
  func kill(request: DronecodeSdk_Rpc_Action_KillRequest, session: DronecodeSdk_Rpc_Action_ActionServiceKillSession) throws -> DronecodeSdk_Rpc_Action_KillResponse
  func returnToLaunch(request: DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, session: DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSession) throws -> DronecodeSdk_Rpc_Action_ReturnToLaunchResponse
  func transitionToFixedWing(request: DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, session: DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSession) throws -> DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse
  func transitionToMulticopter(request: DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, session: DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSession) throws -> DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse
  func getTakeoffAltitude(request: DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, session: DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSession) throws -> DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse
  func setTakeoffAltitude(request: DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, session: DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSession) throws -> DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse
  func getMaximumSpeed(request: DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, session: DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSession) throws -> DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse
  func setMaximumSpeed(request: DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, session: DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSession) throws -> DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse
}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceArmSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceArmSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_ArmRequest, DronecodeSdk_Rpc_Action_ArmResponse>, DronecodeSdk_Rpc_Action_ActionServiceArmSession {}

class DronecodeSdk_Rpc_Action_ActionServiceArmSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceArmSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceDisarmSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceDisarmSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_DisarmRequest, DronecodeSdk_Rpc_Action_DisarmResponse>, DronecodeSdk_Rpc_Action_ActionServiceDisarmSession {}

class DronecodeSdk_Rpc_Action_ActionServiceDisarmSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceDisarmSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTakeoffSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTakeoffSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_TakeoffRequest, DronecodeSdk_Rpc_Action_TakeoffResponse>, DronecodeSdk_Rpc_Action_ActionServiceTakeoffSession {}

class DronecodeSdk_Rpc_Action_ActionServiceTakeoffSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceTakeoffSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceLandSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceLandSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_LandRequest, DronecodeSdk_Rpc_Action_LandResponse>, DronecodeSdk_Rpc_Action_ActionServiceLandSession {}

class DronecodeSdk_Rpc_Action_ActionServiceLandSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceLandSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceKillSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceKillSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_KillRequest, DronecodeSdk_Rpc_Action_KillResponse>, DronecodeSdk_Rpc_Action_ActionServiceKillSession {}

class DronecodeSdk_Rpc_Action_ActionServiceKillSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceKillSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_ReturnToLaunchRequest, DronecodeSdk_Rpc_Action_ReturnToLaunchResponse>, DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSession {}

class DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_TransitionToFixedWingRequest, DronecodeSdk_Rpc_Action_TransitionToFixedWingResponse>, DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSession {}

class DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_TransitionToMulticopterRequest, DronecodeSdk_Rpc_Action_TransitionToMulticopterResponse>, DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSession {}

class DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_GetTakeoffAltitudeRequest, DronecodeSdk_Rpc_Action_GetTakeoffAltitudeResponse>, DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSession {}

class DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_SetTakeoffAltitudeRequest, DronecodeSdk_Rpc_Action_SetTakeoffAltitudeResponse>, DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSession {}

class DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_GetMaximumSpeedRequest, DronecodeSdk_Rpc_Action_GetMaximumSpeedResponse>, DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSession {}

class DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSession {}

internal protocol DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSession: ServerSessionUnary {}

fileprivate final class DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSessionBase: ServerSessionUnaryBase<DronecodeSdk_Rpc_Action_SetMaximumSpeedRequest, DronecodeSdk_Rpc_Action_SetMaximumSpeedResponse>, DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSession {}

class DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSessionTestStub: ServerSessionUnaryTestStub, DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSession {}


/// Main server for generated service
internal final class DronecodeSdk_Rpc_Action_ActionServiceServer: ServiceServer {
  private let provider: DronecodeSdk_Rpc_Action_ActionServiceProvider

  internal init(address: String, provider: DronecodeSdk_Rpc_Action_ActionServiceProvider) {
    self.provider = provider
    super.init(address: address)
  }

  internal init?(address: String, certificateURL: URL, keyURL: URL, provider: DronecodeSdk_Rpc_Action_ActionServiceProvider) {
    self.provider = provider
    super.init(address: address, certificateURL: certificateURL, keyURL: keyURL)
  }

  internal init?(address: String, certificateString: String, keyString: String, provider: DronecodeSdk_Rpc_Action_ActionServiceProvider) {
    self.provider = provider
    super.init(address: address, certificateString: certificateString, keyString: keyString)
  }

  /// Start the server.
  internal override func handleMethod(_ method: String, handler: Handler, queue: DispatchQueue) throws -> Bool {
    let provider = self.provider
    switch method {
    case "/dronecode_sdk.rpc.action.ActionService/Arm":
      try DronecodeSdk_Rpc_Action_ActionServiceArmSessionBase(
        handler: handler,
        providerBlock: { try provider.arm(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceArmSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/Disarm":
      try DronecodeSdk_Rpc_Action_ActionServiceDisarmSessionBase(
        handler: handler,
        providerBlock: { try provider.disarm(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceDisarmSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/Takeoff":
      try DronecodeSdk_Rpc_Action_ActionServiceTakeoffSessionBase(
        handler: handler,
        providerBlock: { try provider.takeoff(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceTakeoffSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/Land":
      try DronecodeSdk_Rpc_Action_ActionServiceLandSessionBase(
        handler: handler,
        providerBlock: { try provider.land(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceLandSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/Kill":
      try DronecodeSdk_Rpc_Action_ActionServiceKillSessionBase(
        handler: handler,
        providerBlock: { try provider.kill(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceKillSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/ReturnToLaunch":
      try DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSessionBase(
        handler: handler,
        providerBlock: { try provider.returnToLaunch(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceReturnToLaunchSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/TransitionToFixedWing":
      try DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSessionBase(
        handler: handler,
        providerBlock: { try provider.transitionToFixedWing(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceTransitionToFixedWingSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/TransitionToMulticopter":
      try DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSessionBase(
        handler: handler,
        providerBlock: { try provider.transitionToMulticopter(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceTransitionToMulticopterSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/GetTakeoffAltitude":
      try DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSessionBase(
        handler: handler,
        providerBlock: { try provider.getTakeoffAltitude(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceGetTakeoffAltitudeSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/SetTakeoffAltitude":
      try DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSessionBase(
        handler: handler,
        providerBlock: { try provider.setTakeoffAltitude(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceSetTakeoffAltitudeSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/GetMaximumSpeed":
      try DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSessionBase(
        handler: handler,
        providerBlock: { try provider.getMaximumSpeed(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceGetMaximumSpeedSessionBase) })
          .run(queue: queue)
      return true
    case "/dronecode_sdk.rpc.action.ActionService/SetMaximumSpeed":
      try DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSessionBase(
        handler: handler,
        providerBlock: { try provider.setMaximumSpeed(request: $0, session: $1 as! DronecodeSdk_Rpc_Action_ActionServiceSetMaximumSpeedSessionBase) })
          .run(queue: queue)
      return true
    default:
      return false
    }
  }
}

