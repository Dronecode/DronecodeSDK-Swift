public func {{ name }}({% for param in params %}{{ param.name }}: {{ param.type }}{{ ", " if not loop.last }}{% endfor %}) -> Single<{{ return_type.name }}> {
    return Single<{{ return_type.name }}>.create { single in
        let {{ name }}Request = {{ request_rpc_type }}()

        do {
            let response = try self.service.{{ name.lower() }}({{ name }}Request)
            {% if return_type.is_primitive -%}
               let {{ return_name }} = response.{{ return_name }}
            {%- else -%}
                let {{ return_name }} = {{ return_type.name }}.translateFromRPC(response.{{ return_name }})
            {%- endif %}

            single(.success({{ return_name }}))
        } catch {
            single(.error(error))
        }

        return Disposables.create()
    }
}
